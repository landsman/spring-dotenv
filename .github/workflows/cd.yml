name: CD

on:
  push:
    tags:
      - 'v*'
  
jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/v/}
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build --console=plain
        env:
          RELEASE_VERSION: ${{ steps.get_version.outputs.VERSION }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v${{ steps.get_version.outputs.VERSION }}"
          release_name: Release ${{ steps.get_version.outputs.VERSION }}
          draft: false
          prerelease: false
          body: |
            ### Installation

            #### Maven

            ```
            <dependency>
              <groupId>me.paulschwarz</groupId>
              <artifactId>spring-dotenv</artifactId>
              <version>${{ steps.get_version.outputs.VERSION }}</version>
            </dependency>
            ```

            #### Gradle

            ```
            implementation 'me.paulschwarz:spring-dotenv:${{ steps.get_version.outputs.VERSION }}'
            ```
      - name: Publish to OSSRH
        run: ./gradlew publish --console=plain
        env:
          RELEASE_VERSION: ${{ steps.get_version.outputs.VERSION }}
          SIGNING_PASSWORD: ${{ secrets.GPG_SECRET }}
          SIGNING_KEY: ${{ secrets.GPG_PUBLIC_KEY_AMORED }}
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
